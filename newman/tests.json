{
	"info": {
		"_postman_id": "d6da1d4a-18e6-43d7-b6d3-1d210b463c2f",
		"name": "AutomatedTests",
		"description": "This is a simple API\n\nContact Support:\n Email: barcovschii.mihail@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "config",
			"item": [
				{
					"name": "TestStart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77acba36-3350-47af-8a16-07f02912d5b0",
								"exec": [
									"if (pm.response.code !== 200) {\r",
									"        throw new Error(\"Can't send requests to the server - there are no responses\");\r",
									"}\r",
									"\r",
									"pm.environment.set(\"queryParams\", '');\r",
									"\r",
									"postman.setNextRequest(\"Add a new developer to the database\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/games",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"games"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "developers",
			"item": [
				{
					"name": "{developer Id}",
					"item": [
						{
							"name": "Find a developer with specified Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7568d32-690e-4de3-b84f-a45e057b8e58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Developer name is 'New Developer Name'\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.developerId).to.eql(\r",
											"        parseInt(postman.getEnvironmentVariable(\"developerId\"))\r",
											"    );\r",
											"    pm.expect(jsonData.developerName).to.eql(\"New Developer Name\");\r",
											"});\r",
											"\r",
											"postman.setNextRequest(\"Get list of all developers\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/developers/:developerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"developers",
										":developerId"
									],
									"variable": [
										{
											"key": "developerId",
											"value": "{{developerId}}",
											"type": "string",
											"description": "(Required) Id of the developer on which the action will be performed"
										}
									]
								},
								"description": "// TODO"
							},
							"response": [
								{
									"name": "Message not readable, wrong field value types used or required field value is not defined",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
								},
								{
									"name": "Unexpected Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find resource with specified id",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
								},
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"developerId\": 24,\n \"developerName\": \"Blizzard\",\n \"developerGames\": [\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameGenres\": [\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    },\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    }\n   ]\n  },\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameGenres\": [\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    },\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    }\n   ]\n  }\n ],\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/developers/24\"\n  },\n  \"developers\": {\n   \"href\": \"http://localhost:8080/developers\"\n  }\n }\n}"
								}
							]
						},
						{
							"name": "Patch developer with specified id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"developerName\": \"<string>\",\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/developers/:developerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"developers",
										":developerId"
									],
									"variable": [
										{
											"id": "06682ea3-559f-4258-baab-2ac91a0bec94",
											"key": "developerId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) Id of the developer on which the action will be performed"
										}
									]
								},
								"description": "// TODO"
							},
							"response": [
								{
									"name": "Could not find resource with specified id",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"developerName\": \"New Developer Name\",\n    \"gameIds\": [\n        43,\n        43\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
								},
								{
									"name": "Unexpected Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"developerName\": \"New Developer Name\",\n    \"gameIds\": [\n        43,\n        43\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Message not readable, wrong field value types used or required field value is not defined",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"developerName\": \"New Developer Name\",\n    \"gameIds\": [\n        43,\n        43\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
								},
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"developerName\": \"New Developer Name\",\n    \"gameIds\": [\n        43,\n        43\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"developerId\": 24,\n \"developerName\": \"Blizzard\",\n \"developerGames\": [\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameGenres\": [\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    },\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    }\n   ]\n  },\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameGenres\": [\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    },\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    }\n   ]\n  }\n ],\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/developers/24\"\n  },\n  \"developers\": {\n   \"href\": \"http://localhost:8080/developers\"\n  }\n }\n}"
								}
							]
						},
						{
							"name": "Delete a developer with specified Id or remove specified games from developer games list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "332c8bed-1868-43d9-85b3-246ae31253c4",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"postman.setNextRequest(null);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/developers/:developerId{{queryParams}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"developers",
										":developerId{{queryParams}}"
									],
									"variable": [
										{
											"key": "developerId{{queryParams}}",
											"value": "{{developerId}}"
										}
									]
								},
								"description": "// TODO"
							},
							"response": [
								{
									"name": "Message not readable, wrong field value types used or required field value is not defined",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId?gameIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"query": [
												{
													"key": "gameIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
								},
								{
									"name": "Could not find resource with specified id",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId?gameIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"query": [
												{
													"key": "gameIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
								},
								{
									"name": "Successfull operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId?gameIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"query": [
												{
													"key": "gameIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/developers/:developerId?gameIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"developers",
												":developerId"
											],
											"query": [
												{
													"key": "gameIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "developerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get list of all developers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36918171-66d1-41e8-a3e1-c80994df6308",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains created developer\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('\"developerId\":' +\r",
									"        parseInt(postman.getEnvironmentVariable(\"developerId\")));\r",
									"    pm.expect(pm.response.text()).to.include('\"developerName\":\"New Developer Name\"');\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Add a new genre to the database\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/developers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"developers"
							]
						},
						"description": "// TODO"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/developers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"developers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_embedded\": {\n  \"developerList\": [\n   {\n    \"developerId\": 24,\n    \"developerName\": \"Blizzard\",\n    \"developerGames\": [\n     {\n      \"gameId\": 42,\n      \"gameName\": \"Starcraft II\",\n      \"gameGenres\": [\n       {\n        \"genreId\": 3,\n        \"genreName\": \"Real-Time Strategy\"\n       },\n       {\n        \"genreId\": 3,\n        \"genreName\": \"Real-Time Strategy\"\n       }\n      ]\n     },\n     {\n      \"gameId\": 42,\n      \"gameName\": \"Starcraft II\",\n      \"gameGenres\": [\n       {\n        \"genreId\": 3,\n        \"genreName\": \"Real-Time Strategy\"\n       },\n       {\n        \"genreId\": 3,\n        \"genreName\": \"Real-Time Strategy\"\n       }\n      ]\n     }\n    ],\n    \"_links\": {\n     \"self\": {\n      \"href\": \"http://localhost:8080/developers/24\"\n     },\n     \"developers\": {\n      \"href\": \"http://localhost:8080/developers\"\n     }\n    }\n   },\n   {\n    \"developerId\": 24,\n    \"developerName\": \"Blizzard\",\n    \"developerGames\": [\n     {\n      \"gameId\": 42,\n      \"gameName\": \"Starcraft II\",\n      \"gameGenres\": [\n       {\n        \"genreId\": 3,\n        \"genreName\": \"Real-Time Strategy\"\n       },\n       {\n        \"genreId\": 3,\n        \"genreName\": \"Real-Time Strategy\"\n       }\n      ]\n     },\n     {\n      \"gameId\": 42,\n      \"gameName\": \"Starcraft II\",\n      \"gameGenres\": [\n       {\n        \"genreId\": 3,\n        \"genreName\": \"Real-Time Strategy\"\n       },\n       {\n        \"genreId\": 3,\n        \"genreName\": \"Real-Time Strategy\"\n       }\n      ]\n     }\n    ],\n    \"_links\": {\n     \"self\": {\n      \"href\": \"http://localhost:8080/developers/24\"\n     },\n     \"developers\": {\n      \"href\": \"http://localhost:8080/developers\"\n     }\n    }\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/developers\"\n  }\n }\n}"
						},
						{
							"name": "Unexpected Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/developers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"developers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a new developer to the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0909e55f-1c4d-4bea-a2df-5f80fe7e347a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Developer name is 'New Developer Name'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.developerName).to.eql(\"New Developer Name\");\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"developerId\", jsonData.developerId);\r",
									"\r",
									"postman.setNextRequest(\"Find a developer with specified Id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"developer\": {\n        \"developerName\": \"New Developer Name\"\n    },\n    \"gameIds\": [\n        \n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/developers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"developers"
							]
						},
						"description": "// TODO"
					},
					"response": [
						{
							"name": "Could not find resource with specified id",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"developer\": {\n        \"developerName\": \"Blizzard\"\n    },\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/developers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"developers"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
						},
						{
							"name": "Unexpected Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"developer\": {\n        \"developerName\": \"Blizzard\"\n    },\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/developers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"developers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Message not readable, wrong field value types used or required field value is not defined",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"developer\": {\n        \"developerName\": \"Blizzard\"\n    },\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/developers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"developers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
						},
						{
							"name": "Successful operation - Object is created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"developer\": {\n        \"developerName\": \"Blizzard\"\n    },\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/developers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"developers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"developerId\": 24,\n \"developerName\": \"Blizzard\",\n \"developerGames\": [\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameGenres\": [\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    },\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    }\n   ]\n  },\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameGenres\": [\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    },\n    {\n     \"genreId\": 3,\n     \"genreName\": \"Real-Time Strategy\"\n    }\n   ]\n  }\n ],\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/developers/24\"\n  },\n  \"developers\": {\n   \"href\": \"http://localhost:8080/developers\"\n  }\n }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "games",
			"item": [
				{
					"name": "{game Id}",
					"item": [
						{
							"name": "Find a game with specified Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c8ddc141-b322-4889-811a-1cbd320cf968",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Game name is 'New Game Name'\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.gameId).to.eql(\r",
											"        parseInt(postman.getEnvironmentVariable(\"gameId\"))\r",
											"    );\r",
											"    pm.expect(jsonData.gameName).to.eql(\"New Game Name\");\r",
											"});\r",
											"\r",
											"postman.setNextRequest(\"Get list of all games\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games/:gameId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games",
										":gameId"
									],
									"variable": [
										{
											"key": "gameId",
											"value": "{{gameId}}"
										}
									]
								},
								"description": "// TODO"
							},
							"response": [
								{
									"name": "Unexpected Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find resource with specified id",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
								},
								{
									"name": "Message not readable, wrong field value types used or required field value is not defined",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
								},
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"gameId\": 42,\n \"gameName\": \"Starcraft II\",\n \"gameDeveloper\": {\n  \"developerId\": 13,\n  \"developerName\": \"Blizzard\"\n },\n \"gameGenres\": [\n  {\n   \"genreId\": 3,\n   \"genreName\": \"Real-Time Strategy\"\n  },\n  {\n   \"genreId\": 3,\n   \"genreName\": \"Real-Time Strategy\"\n  }\n ],\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/games/42\"\n  },\n  \"games\": {\n   \"href\": \"http://localhost:8080/games\"\n  },\n  \"developer\": {\n   \"href\": \"http://localhost:8080/developers/24\"\n  }\n }\n}"
								}
							]
						},
						{
							"name": "Patch game with specified id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"gameName\": \"New Game Name\",\n    \"developerId\": 1,\n    \"genreIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/games/:gameId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games",
										":gameId"
									],
									"variable": [
										{
											"key": "gameId",
											"value": "25",
											"type": "string",
											"description": "(Required) Id of the game on which the action will be performed"
										}
									]
								},
								"description": "// TODO"
							},
							"response": [
								{
									"name": "Message not readable, wrong field value types used or required field value is not defined",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"gameName\": \"New Game Name\",\n    \"developerId\": 25,\n    \"genreIds\": [\n        4,\n        4\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
								},
								{
									"name": "Unexpected Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"gameName\": \"New Game Name\",\n    \"developerId\": 25,\n    \"genreIds\": [\n        4,\n        4\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"gameName\": \"New Game Name\",\n    \"developerId\": 25,\n    \"genreIds\": [\n        4,\n        4\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"gameId\": 42,\n \"gameName\": \"Starcraft II\",\n \"gameDeveloper\": {\n  \"developerId\": 13,\n  \"developerName\": \"Blizzard\"\n },\n \"gameGenres\": [\n  {\n   \"genreId\": 3,\n   \"genreName\": \"Real-Time Strategy\"\n  },\n  {\n   \"genreId\": 3,\n   \"genreName\": \"Real-Time Strategy\"\n  }\n ],\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/games/42\"\n  },\n  \"games\": {\n   \"href\": \"http://localhost:8080/games\"\n  },\n  \"developer\": {\n   \"href\": \"http://localhost:8080/developers/24\"\n  }\n }\n}"
								},
								{
									"name": "Could not find resource with specified id",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"gameName\": \"New Game Name\",\n    \"developerId\": 25,\n    \"genreIds\": [\n        4,\n        4\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
								}
							]
						},
						{
							"name": "Delete a game with specified Id or remove specified genres from game genres list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83b996d9-d042-453c-b946-c76da4d29904",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"postman.setNextRequest(\"Delete a developer with specified Id or remove specified games from developer games list\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games/:gameId{{queryParams}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games",
										":gameId{{queryParams}}"
									],
									"variable": [
										{
											"key": "gameId{{queryParams}}",
											"value": "{{gameId}}"
										}
									]
								},
								"description": "// TODO"
							},
							"response": [
								{
									"name": "Successfull operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/:gameId?genreIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"query": [
												{
													"key": "genreIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Message not readable, wrong field value types used or required field value is not defined",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/:gameId?genreIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"query": [
												{
													"key": "genreIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
								},
								{
									"name": "Unexpected Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/:gameId?genreIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"query": [
												{
													"key": "genreIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find resource with specified id",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/:gameId?genreIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"query": [
												{
													"key": "genreIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "gameId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get list of all games",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "577db9ff-70f4-4233-b524-bc31c8d607ab",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains created game\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('\"gameId\":' +\r",
									"        parseInt(postman.getEnvironmentVariable(\"gameId\")));\r",
									"    pm.expect(pm.response.text()).to.include('\"gameName\":\"New Game Name\"');\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Delete a genre with specified Id or remove specified games from genre games list\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/games",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"games"
							]
						},
						"description": "// TODO"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_embedded\": {\n  \"gameList\": [\n   {\n    \"gameId\": 42,\n    \"gameName\": \"Starcraft II\",\n    \"gameDeveloper\": {\n     \"developerId\": 13,\n     \"developerName\": \"Blizzard\"\n    },\n    \"gameGenres\": [\n     {\n      \"genreId\": 3,\n      \"genreName\": \"Real-Time Strategy\"\n     },\n     {\n      \"genreId\": 3,\n      \"genreName\": \"Real-Time Strategy\"\n     }\n    ],\n    \"_links\": {\n     \"self\": {\n      \"href\": \"http://localhost:8080/games/42\"\n     },\n     \"games\": {\n      \"href\": \"http://localhost:8080/games\"\n     },\n     \"developer\": {\n      \"href\": \"http://localhost:8080/developers/24\"\n     }\n    }\n   },\n   {\n    \"gameId\": 42,\n    \"gameName\": \"Starcraft II\",\n    \"gameDeveloper\": {\n     \"developerId\": 13,\n     \"developerName\": \"Blizzard\"\n    },\n    \"gameGenres\": [\n     {\n      \"genreId\": 3,\n      \"genreName\": \"Real-Time Strategy\"\n     },\n     {\n      \"genreId\": 3,\n      \"genreName\": \"Real-Time Strategy\"\n     }\n    ],\n    \"_links\": {\n     \"self\": {\n      \"href\": \"http://localhost:8080/games/42\"\n     },\n     \"games\": {\n      \"href\": \"http://localhost:8080/games\"\n     },\n     \"developer\": {\n      \"href\": \"http://localhost:8080/developers/24\"\n     }\n    }\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/games\"\n  }\n }\n}"
						},
						{
							"name": "Unexpected Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a new game to the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e957db2-6319-4861-976b-9c66c8ddbb71",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Game name is 'New Game Name'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.gameName).to.eql(\"New Game Name\");\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"gameId\", jsonData.gameId);\r",
									"\r",
									"postman.setNextRequest(\"Find a game with specified Id\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"developerId\": {{developerId}},\n    \"game\": {\n        \"gameName\": \"New Game Name\"\n    },\n    \"genreIds\": [\n        {{genreId}}\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/games",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"games"
							]
						},
						"description": "// TODO"
					},
					"response": [
						{
							"name": "Message not readable, wrong field value types used or required field value is not defined",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"developerId\": 24,\n    \"game\": {\n        \"gameName\": \"Starcraft II\"\n    },\n    \"genreIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
						},
						{
							"name": "Successful operation - Object is created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"developerId\": 24,\n    \"game\": {\n        \"gameName\": \"Starcraft II\"\n    },\n    \"genreIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"gameId\": 42,\n \"gameName\": \"Starcraft II\",\n \"gameDeveloper\": {\n  \"developerId\": 13,\n  \"developerName\": \"Blizzard\"\n },\n \"gameGenres\": [\n  {\n   \"genreId\": 3,\n   \"genreName\": \"Real-Time Strategy\"\n  },\n  {\n   \"genreId\": 3,\n   \"genreName\": \"Real-Time Strategy\"\n  }\n ],\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/games/42\"\n  },\n  \"games\": {\n   \"href\": \"http://localhost:8080/games\"\n  },\n  \"developer\": {\n   \"href\": \"http://localhost:8080/developers/24\"\n  }\n }\n}"
						},
						{
							"name": "Unexpected Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"developerId\": 24,\n    \"game\": {\n        \"gameName\": \"Starcraft II\"\n    },\n    \"genreIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Could not find resource with specified id",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"developerId\": 24,\n    \"game\": {\n        \"gameName\": \"Starcraft II\"\n    },\n    \"genreIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "genres",
			"item": [
				{
					"name": "{genre Id}",
					"item": [
						{
							"name": "Find a genre with specified Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8a887ab-d497-4fea-9ee0-d0b589d0c5e9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Genre name is 'New Genre Name'\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.genreId).to.eql(\r",
											"        parseInt(postman.getEnvironmentVariable(\"genreId\"))\r",
											"    );\r",
											"    pm.expect(jsonData.genreName).to.eql(\"New Genre Name\");\r",
											"});\r",
											"\r",
											"postman.setNextRequest(\"Get list of all genres\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/genres/:genreId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genres",
										":genreId"
									],
									"variable": [
										{
											"key": "genreId",
											"value": "{{genreId}}",
											"type": "string",
											"description": "(Required) Id of the genre on which the action will be performed"
										}
									]
								},
								"description": "// TODO"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"genreId\": 3,\n \"genreName\": \"Real-Time Strategy\",\n \"genreGames\": [\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameDeveloper\": {\n    \"developerId\": 24,\n    \"developerName\": \"Blizzard\"\n   }\n  },\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameDeveloper\": {\n    \"developerId\": 24,\n    \"developerName\": \"Blizzard\"\n   }\n  }\n ],\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/genres/3\"\n  },\n  \"genres\": {\n   \"href\": \"http://localhost:8080/genres\"\n  }\n }\n}"
								},
								{
									"name": "Unexpected Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find resource with specified id",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
								},
								{
									"name": "Message not readable, wrong field value types used or required field value is not defined",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
								}
							]
						},
						{
							"name": "Patch genre with specified id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"genreName\": \"<string>\",\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/genres/:genreId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genres",
										":genreId"
									],
									"variable": [
										{
											"id": "f7735ec9-8daf-4450-be9d-f9a7d05c2a20",
											"key": "genreId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) Id of the genre on which the action will be performed"
										}
									]
								},
								"description": "// TODO"
							},
							"response": [
								{
									"name": "Message not readable, wrong field value types used or required field value is not defined",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genreName\": \"New Genre Name\",\n    \"gameIds\": [\n        43,\n        43\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
								},
								{
									"name": "Could not find resource with specified id",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genreName\": \"New Genre Name\",\n    \"gameIds\": [\n        43,\n        43\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
								},
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genreName\": \"New Genre Name\",\n    \"gameIds\": [\n        43,\n        43\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"genreId\": 3,\n \"genreName\": \"Real-Time Strategy\",\n \"genreGames\": [\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameDeveloper\": {\n    \"developerId\": 24,\n    \"developerName\": \"Blizzard\"\n   }\n  },\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameDeveloper\": {\n    \"developerId\": 24,\n    \"developerName\": \"Blizzard\"\n   }\n  }\n ],\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/genres/3\"\n  },\n  \"genres\": {\n   \"href\": \"http://localhost:8080/genres\"\n  }\n }\n}"
								},
								{
									"name": "Unexpected Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genreName\": \"New Genre Name\",\n    \"gameIds\": [\n        43,\n        43\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a genre with specified Id or remove specified games from genre games list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d269-2f71-4dca-a134-53155b99b042",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"postman.setNextRequest(\"Delete a game with specified Id or remove specified genres from game genres list\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9d1458c5-a3e4-40c8-88c9-953eb244f3a5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/genres/:genreId{{queryParams}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genres",
										":genreId{{queryParams}}"
									],
									"variable": [
										{
											"key": "genreId{{queryParams}}",
											"value": "{{genreId}}"
										}
									]
								},
								"description": "// TODO"
							},
							"response": [
								{
									"name": "Successfull operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId?gameIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"query": [
												{
													"key": "gameIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find resource with specified id",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId?gameIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"query": [
												{
													"key": "gameIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
								},
								{
									"name": "Unexpected Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId?gameIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"query": [
												{
													"key": "gameIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Message not readable, wrong field value types used or required field value is not defined",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/genres/:genreId?gameIds=42,42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"genres",
												":genreId"
											],
											"query": [
												{
													"key": "gameIds",
													"value": "42,42"
												}
											],
											"variable": [
												{
													"key": "genreId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get list of all genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39e1b892-bd47-4c8c-81fc-608b690cbbf2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains created genre\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('\"genreId\":' +\r",
									"        parseInt(postman.getEnvironmentVariable(\"genreId\")));\r",
									"    pm.expect(pm.response.text()).to.include('\"genreName\":\"New Genre Name\"');\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Add a new game to the database\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/genres",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"genres"
							]
						},
						"description": "// TODO"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/genres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_embedded\": {\n  \"gameList\": [\n   {\n    \"genreId\": 3,\n    \"genreName\": \"Real-Time Strategy\",\n    \"genreGames\": [\n     {\n      \"gameId\": 42,\n      \"gameName\": \"Starcraft II\",\n      \"gameDeveloper\": {\n       \"developerId\": 24,\n       \"developerName\": \"Blizzard\"\n      }\n     },\n     {\n      \"gameId\": 42,\n      \"gameName\": \"Starcraft II\",\n      \"gameDeveloper\": {\n       \"developerId\": 24,\n       \"developerName\": \"Blizzard\"\n      }\n     }\n    ],\n    \"_links\": {\n     \"self\": {\n      \"href\": \"http://localhost:8080/genres/3\"\n     },\n     \"genres\": {\n      \"href\": \"http://localhost:8080/genres\"\n     }\n    }\n   },\n   {\n    \"genreId\": 3,\n    \"genreName\": \"Real-Time Strategy\",\n    \"genreGames\": [\n     {\n      \"gameId\": 42,\n      \"gameName\": \"Starcraft II\",\n      \"gameDeveloper\": {\n       \"developerId\": 24,\n       \"developerName\": \"Blizzard\"\n      }\n     },\n     {\n      \"gameId\": 42,\n      \"gameName\": \"Starcraft II\",\n      \"gameDeveloper\": {\n       \"developerId\": 24,\n       \"developerName\": \"Blizzard\"\n      }\n     }\n    ],\n    \"_links\": {\n     \"self\": {\n      \"href\": \"http://localhost:8080/genres/3\"\n     },\n     \"genres\": {\n      \"href\": \"http://localhost:8080/genres\"\n     }\n    }\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/genres\"\n  }\n }\n}"
						},
						{
							"name": "Unexpected Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/genres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genres"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a new genre to the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c51ffdd5-7523-475b-8968-bb0b4956d5f9",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Genre name is 'New Genre Name'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.genreName).to.eql(\"New Genre Name\");\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"genreId\", jsonData.genreId);\r",
									"\r",
									"postman.setNextRequest(\"Find a genre with specified Id\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"genre\": {\n        \"genreName\": \"New Genre Name\"\n    },\n    \"gameIds\": [\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/genres",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"genres"
							]
						},
						"description": "// TODO"
					},
					"response": [
						{
							"name": "Unexpected Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"genre\": {\n        \"genreName\": \"Real-Time Strategy\"\n    },\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/genres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genres"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Message not readable, wrong field value types used or required field value is not defined",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"genre\": {\n        \"genreName\": \"Real-Time Strategy\"\n    },\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/genres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genres"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"fieldName\": \"gameId\",\n \"message\": \"incorrect value [qwerty]\",\n \"timestamp\": \"2020-07-29T13:49:48.8347975\"\n}"
						},
						{
							"name": "Successful operation - Object is created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"genre\": {\n        \"genreName\": \"Real-Time Strategy\"\n    },\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/genres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genres"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"genreId\": 3,\n \"genreName\": \"Real-Time Strategy\",\n \"genreGames\": [\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameDeveloper\": {\n    \"developerId\": 24,\n    \"developerName\": \"Blizzard\"\n   }\n  },\n  {\n   \"gameId\": 42,\n   \"gameName\": \"Starcraft II\",\n   \"gameDeveloper\": {\n    \"developerId\": 24,\n    \"developerName\": \"Blizzard\"\n   }\n  }\n ],\n \"_links\": {\n  \"self\": {\n   \"href\": \"http://localhost:8080/genres/3\"\n  },\n  \"genres\": {\n   \"href\": \"http://localhost:8080/genres\"\n  }\n }\n}"
						},
						{
							"name": "Could not find resource with specified id",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"genre\": {\n        \"genreName\": \"Real-Time Strategy\"\n    },\n    \"gameIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/genres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genres"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 43,\n \"message\": \"Could not find game: 43\",\n \"timestamp\": \"2020-07-29T14:22:20.2377763\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d2a912fc-40b6-4f8e-accd-05b12d5506f3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "93f8bc60-ab02-4ee1-84f0-c34b45729adf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}